---
title: "Block 1" 
author: "Deepak Tanwar"
editor: visual
format:
  revealjs: 
    theme: default
    controls-layout: bottom-right
    controls-tutorial: true
    footer: "Publication ready figures with `R`"
title-slide-attributes:
  data-background-size: contain
  data-background-opacity: "0.8"
editor_options: 
  chunk_output_type: console
---

## Introduction

-   Name
-   Research group
-   Topic of research
-   Datasets for your research
-   Why are you attending this course?

------------------------------------------------------------------------

## Quiz 1

Questions 1 to 4

------------------------------------------------------------------------

![](https://ninjatables.com/wp-content/uploads/2022/12/2-1.png){width="100%" fig-align="center"}

## Why choosing the right chart matters?

-   Effective visualizations communicate data clearly and efficiently.
-   The wrong chart can mislead or confuse your audience.
-   Good visualizations highlight patterns, trends, and outliers.

## Types of data

-   **Categorical**: Names or labels (e.g., Region, Product Type)
-   **Numeric**: Quantitative values (e.g., Sales, Temperature)
-   **Time**: Dates or time intervals (e.g., Monthly Revenue)
-   **Geographic**: Locations (e.g., Country, Coordinates)

# What to use for each type?

## Categorical Data

-   Use **bar charts** to compare categories

```{r}
# Bar plot for categorical data
counts <- table(c("A", "B", "A", "C", "B", "A"))
barplot(counts, main="Bar Plot Example", col="lightblue",
        xlab="Category", ylab="Frequency")

```

## Categorical Data

-   Use **pie charts** to show proportions

```{r}
# Pie chart for proportions
slices <- c(10, 20, 30, 40)
labels <- c("A", "B", "C", "D")
pie(slices, labels=labels, main="Pie Chart Example", col=rainbow(length(slices)))
```

## Numeric Data

-   Use **histograms** to show distributions

```{r}
# Histogram for numeric distribution
data <- rnorm(100, mean=50, sd=10)
hist(data, main="Histogram Example", col="lightgreen",
     xlab="Value", ylab="Frequency", breaks=10)
```

## Numeric Data

-   Use **boxplots** to show spread and outliers

```{r}
# Boxplot for spread and outliers
values <- rnorm(50)
boxplot(values, main="Boxplot Example", col="orange")
```

## Relational Data

-   Use **scatter plots** to show relationships between two numeric variables

```{r}
# Scatter plot for two numeric variables
x <- rnorm(50)
y <- rnorm(50)
plot(x, y, main="Scatter Plot Example", xlab="X", ylab="Y",
     col="blue", pch=19)
```

## Time Series Data

-   Use **line charts** to show trends over time

```{r}
# Line chart for time series
time <- 1:12
sales <- c(200, 220, 250, 270, 300, 320, 310, 330, 350, 370, 390, 400)
plot(time, sales, type="o", col="purple", main="Monthly Sales",
     xlab="Month", ylab="Sales")

```

## Geographic Data

-   Use **choropleth maps** to show values by region

```{r}
# Simple world map outline
library(maps)
map("world", fill=TRUE, col="lightgray")
```

## Conclusion: Choosing the Right Visualization

-   There is no single “correct” chart for a given dataset. For example, numeric data can be shown as:
    -   Histogram (distribution)
    -   Boxplot (spread and outliers)
    -   Density plot (smooth distribution)

## Conclusion: Choosing the Right Visualization

-   The best choice depends on:
    -   Your goal: Compare, show distribution, highlight relationships?
    -   Audience: Technical vs. non-technical
    -   Clarity: Which chart communicates the message most clearly?

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}
```{r}
library(VennDiagram)

A <- c("apple","banana","cherry","date","kiwi","orange","pear","plum","mango","papaya")
B <- c("banana","date","kiwi","orange","pear","fig","grape","melon","peach","apricot")
C <- c("kiwi","fig","lemon","mango","berry","pear","coconut","guava","papaya","plum")

dt <- data.frame(A = A, B = B, C = C)
rownames(dt) <- NULL
  
dt
```
:::

::: {.column width="60%"}
```{r, fig.height=7, fig.width=7, fig.align='center'}
venn.plot <- draw.triple.venn(
  area1 = length(A),
  area2 = length(B),
  area3 = length(C),
  n12 = length(intersect(A, B)),
  n23 = length(intersect(B, C)),
  n13 = length(intersect(A, C)),
  n123 = length(Reduce(intersect, list(A, B, C))),
  category = c("A", "B", "C"),
  fill = c("skyblue", "pink", "lightgreen")
)

grid.draw(venn.plot)

```
:::
:::::

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}
```{r}
library(eulerr)

fit <- euler(c(
  A = length(A),
  B = length(B),
  C = length(C),
  "A&B" = length(intersect(A, B)),
  "A&C" = length(intersect(A, C)),
  "B&C" = length(intersect(B, C)),
  "A&B&C" = length(Reduce(intersect, list(A, B, C)))
))

dt
```
:::

::: {.column width="60%"}
```{r, fig.height=7, fig.width=7, fig.align='center'}
plot(fit, fills = c("skyblue", "pink", "lightgreen"), labels = TRUE)
```
:::
:::::

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}
```{r}
library(UpSetR)

listInput <- list(
  A = A,
  B = B,
  C = C
)

dt
```
:::

::: {.column width="60%"}
```{r, fig.height=7, fig.width=7, fig.align='center'}
upset(fromList(listInput), order.by = "freq")
```
:::
:::::

# Tip: Start with the simplest chart that answers the question.

## From data to visualization

![](https://www.data-to-viz.com/img/logo/tree-s.png){width="10%" fig-align="center"}

### Only resource you need: [data-to-viz.com](https://www.data-to-viz.com/)

------------------------------------------------------------------------

## ![](../assets/figs/01_poster.png)

## Exercise: Read and discuss content

**Group 1:** [data-to-viz.com/caveat/](data-to-viz.com/caveat/)bin_size.html

**Group 2:** [data-to-viz.com/caveat/](data-to-viz.com/caveat/)consistency.html

**Group 3:** [data-to-viz.com/caveat/](data-to-viz.com/caveat/)simpson.html

**Group 4:** [data-to-viz.com/caveat/](data-to-viz.com/caveat/)boxplot.html

1.  What is the main problem or risk highlighted by this caveat?
2.  Why does this issue occur?
3.  What are the potential consequences of ignoring this caveat?
4.  How can we detect or avoid this problem in practice?

## Quiz 2

Questions 5 to 12
