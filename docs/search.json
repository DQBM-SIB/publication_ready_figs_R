[
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "We welcome contributions to this project!\nPlease feel free to: * Report a bug * Discuss the current state of the code * Submit a fix * Propose new features\n\n\nWe use github to host code, to track issues and feature requests, as well as accept pull requests.\n\n\n\nPull requests are the best way to propose changes to the codebase. We actively welcome your pull requests:\n\nFork the repo and create your branch from main.\nIf you’ve added code that should be tested, add tests.\nIf you’ve changed APIs, update the documentation.\nEnsure the test suite passes.\nMake sure your code lints.\nIssue that pull request!\n\n\n\n\nIn short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that’s a concern.\n\n\n\nWe use GitHub issues to track public bugs. Report a bug by opening a new issue; it’s that easy!\n\n\n\nGreat Bug Reports tend to have:\n\nA quick summary and/or background\nSteps to reproduce\n\nBe specific!\nGive sample code if you can.\n\nWhat you expected would happen\nWhat actually happens\nNotes (possibly including why you think this might be happening, or stuff you tried that didn’t work)\n\nPeople love thorough bug reports. I’m not even kidding.\n\n\n\n\nYou can look around the codebase to get a feel for the style."
  },
  {
    "objectID": "CONTRIBUTING.html#we-develop-with-github",
    "href": "CONTRIBUTING.html#we-develop-with-github",
    "title": "Contributing",
    "section": "",
    "text": "We use github to host code, to track issues and feature requests, as well as accept pull requests."
  },
  {
    "objectID": "CONTRIBUTING.html#all-code-changes-happen-through-pull-requests",
    "href": "CONTRIBUTING.html#all-code-changes-happen-through-pull-requests",
    "title": "Contributing",
    "section": "",
    "text": "Pull requests are the best way to propose changes to the codebase. We actively welcome your pull requests:\n\nFork the repo and create your branch from main.\nIf you’ve added code that should be tested, add tests.\nIf you’ve changed APIs, update the documentation.\nEnsure the test suite passes.\nMake sure your code lints.\nIssue that pull request!"
  },
  {
    "objectID": "CONTRIBUTING.html#any-contributions-you-make-will-be-under-the-mit-software-license",
    "href": "CONTRIBUTING.html#any-contributions-you-make-will-be-under-the-mit-software-license",
    "title": "Contributing",
    "section": "",
    "text": "In short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that’s a concern."
  },
  {
    "objectID": "CONTRIBUTING.html#report-bugs-using-githubs-issues",
    "href": "CONTRIBUTING.html#report-bugs-using-githubs-issues",
    "title": "Contributing",
    "section": "",
    "text": "We use GitHub issues to track public bugs. Report a bug by opening a new issue; it’s that easy!"
  },
  {
    "objectID": "CONTRIBUTING.html#write-bug-reports-with-detail-background-and-sample-code",
    "href": "CONTRIBUTING.html#write-bug-reports-with-detail-background-and-sample-code",
    "title": "Contributing",
    "section": "",
    "text": "Great Bug Reports tend to have:\n\nA quick summary and/or background\nSteps to reproduce\n\nBe specific!\nGive sample code if you can.\n\nWhat you expected would happen\nWhat actually happens\nNotes (possibly including why you think this might be happening, or stuff you tried that didn’t work)\n\nPeople love thorough bug reports. I’m not even kidding."
  },
  {
    "objectID": "CONTRIBUTING.html#use-a-consistent-coding-style",
    "href": "CONTRIBUTING.html#use-a-consistent-coding-style",
    "title": "Contributing",
    "section": "",
    "text": "You can look around the codebase to get a feel for the style."
  },
  {
    "objectID": "qmd/setup.html",
    "href": "qmd/setup.html",
    "title": "Setup",
    "section": "",
    "text": "R 4.5.1\nRStudio (latest version)\nrenv R package installed: renv documentation"
  },
  {
    "objectID": "qmd/setup.html#computational-requirements",
    "href": "qmd/setup.html#computational-requirements",
    "title": "Setup",
    "section": "",
    "text": "R 4.5.1\nRStudio (latest version)\nrenv R package installed: renv documentation"
  },
  {
    "objectID": "qmd/prerequisites.html",
    "href": "qmd/prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "Understanding R syntax (objects, functions, operators).\nAbility to create and manipulate basic data structures: vectors, factors, data frames, and lists.\nFamiliarity with indexing and subsetting data.\nWriting simple scripts in RStudio or another R IDE.\nReading and importing data (read.csv(), read.table(), or readr)."
  },
  {
    "objectID": "qmd/prerequisites.html#basic-r-programming-skills",
    "href": "qmd/prerequisites.html#basic-r-programming-skills",
    "title": "Prerequisites",
    "section": "",
    "text": "Understanding R syntax (objects, functions, operators).\nAbility to create and manipulate basic data structures: vectors, factors, data frames, and lists.\nFamiliarity with indexing and subsetting data.\nWriting simple scripts in RStudio or another R IDE.\nReading and importing data (read.csv(), read.table(), or readr)."
  },
  {
    "objectID": "qmd/prerequisites.html#skill-self-assessment",
    "href": "qmd/prerequisites.html#skill-self-assessment",
    "title": "Prerequisites",
    "section": "Skill Self-Assessment",
    "text": "Skill Self-Assessment\nYou can evaluate your skills here:\n\nGoogle Form\nCoursera R Programming Skill Assessment\nNCEAS R Review and Assessment"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Publication-Ready Figure Generation in R",
    "section": "",
    "text": "Welcome to the course website for Publication-Ready Figure Generation in R."
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Publication-Ready Figure Generation in R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nUnderstand the principles of effective data visualization:\n\nExplain the importance of clarity, accuracy, and aesthetics in creating publication-ready figures.\nIdentify common pitfalls in data visualization and how to avoid them.\n\nUse base R graphics for figure creation:\n\nCreate basic plots (e.g., scatterplots, bar charts, histograms) using base R functions like plot(), barplot(), and hist().\nCustomize plots with titles, labels, legends, and color schemes.\n\nMaster ggplot2 for advanced visualizations:\n\nBuild complex and layered visualizations using the ggplot2 package.\nApply themes, scales, and geoms to create polished and publication-ready figures.\n\nCustomize figures for specific publication requirements:\n\nAdjust figure dimensions, resolutions, and formats (e.g., PDF, PNG, TIFF) for journal submissions.\nModify fonts, line weights, and other stylistic elements to meet publication guidelines.\n\nIncorporate statistical annotations and summaries:\n\nAdd statistical summaries (e.g., regression lines, confidence intervals) to figures.\nAnnotate plots with p-values, correlation coefficients, or other relevant statistics.\n\nExport high-quality figures:\n\nUse functions like ggsave() or pdf() to export figures in high resolution.\nEnsure exported figures meet the technical requirements of target journals or platforms.\n\nCreate multi-panel figures:\n\nCombine multiple plots into a single figure using tools like patchwork.\nAlign and arrange subplots to effectively communicate complex data.\n\nFollow best practices for reproducibility:\n\nWrite clean and reusable R scripts for figure generation.\nDocument code and workflows to ensure reproducibility and transparency."
  }
]